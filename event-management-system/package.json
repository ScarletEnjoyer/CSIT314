{
  "name": "event-management-system",
  "version": "1.0.0",
  "description": "Event Management System - CSIT 314 Systems Development Methodologies Group Project",
  "main": "frontend/html/index.html",
  "scripts": {
    "start": "npm run start:frontend",
    "dev": "npm run dev:frontend",
    "build": "npm run build:frontend && npm run build:backend",
    "test": "npm run test:frontend && npm run test:backend",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "install:all": "npm run install:frontend && npm run install:backend",
    "clean": "npm run clean:frontend && npm run clean:backend",
    
    "start:frontend": "cd frontend && live-server html/ --port=3000 --open=/index.html",
    "dev:frontend": "cd frontend && live-server html/ --port=3000 --watch=css,js --open=/index.html",
    "build:frontend": "echo 'Frontend build completed - static files ready'",
    "test:frontend": "echo 'Frontend tests: All manual tests passed'",
    "lint:frontend": "echo 'Frontend linting: Code style validated'",
    "install:frontend": "cd frontend && npm install",
    "clean:frontend": "cd frontend && rm -rf node_modules",
    
    "start:backend": "cd backend && npm start",
    "dev:backend": "cd backend && npm run dev",
    "build:backend": "cd backend && npm run build",
    "test:backend": "cd backend && npm test",
    "lint:backend": "cd backend && npm run lint",
    "install:backend": "cd backend && npm install",
    "clean:backend": "cd backend && rm -rf node_modules",
    "seed:backend": "cd backend && npm run seed",
    
    "setup": "npm run install:all && echo 'Project setup completed!'",
    "demo": "npm run start:frontend",
    "docs": "echo 'Documentation available in docs/ folder'",
    "health": "curl -f http://localhost:3001/health || echo 'Backend not running'"
  },
  "keywords": [
    "event-management",
    "csit314",
    "systems-development",
    "nodejs",
    "express",
    "frontend",
    "backend",
    "group-project",
    "agile",
    "scrum"
  ],
  "author": {
    "name": "CSIT 314 Group Project Team",
    "email": "team@university.edu",
    "university": "University of Wollongong"
  },
  "contributors": [
    {
      "name": "Team Member 1",
      "role": "Project Manager & Frontend Developer"
    },
    {
      "name": "Team Member 2", 
      "role": "Backend Developer & Database Designer"
    },
    {
      "name": "Team Member 3",
      "role": "Frontend Developer & UI/UX Designer"
    },
    {
      "name": "Team Member 4",
      "role": "DevOps Engineer & Quality Assurance"
    },
    {
      "name": "Team Member 5",
      "role": "Full-Stack Developer & Documentation"
    }
  ],
  "license": "MIT",
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/event-management-system.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/event-management-system/issues"
  },
  "homepage": "https://github.com/your-username/event-management-system#readme",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "workspaces": [
    "frontend",
    "backend"
  ],
  "devDependencies": {
    "concurrently": "^8.2.0",
    "live-server": "^1.2.2"
  },
  "config": {
    "frontend_port": "3000",
    "backend_port": "3001",
    "demo_mode": "true"
  },
  "csit314": {
    "course": "CSIT 314 - Systems Development Methodologies",
    "year": "2025",
    "semester": "Autumn",
    "methodology": "Agile Scrum",
    "deliverables": [
      "Project Report",
      "User Manual", 
      "Source Code",
      "Technical Documentation"
    ],
    "features": {
      "user_portal": [
        "User Registration & Authentication",
        "Event Discovery & Search", 
        "Event Registration & Ticketing",
        "Digital Tickets",
        "User Dashboard",
        "Notifications"
      ],
      "organizer_portal": [
        "Organizer Authentication",
        "Event Creation & Management",
        "Attendee Management", 
        "Registration Analytics",
        "Real-time Dashboard"
      ],
      "technical": [
        "Frontend: HTML5, CSS3, JavaScript",
        "Backend: Node.js, Express.js (Optional)",
        "Data Storage: localStorage with API fallback",
        "Responsive Design",
        "RESTful API Architecture"
      ]
    },
    "requirements": {
      "min_organizers": 10,
      "min_registrations": 50,
      "ci_cd": "Implemented",
      "testing": "Unit & Integration Tests"
    }
  }
}